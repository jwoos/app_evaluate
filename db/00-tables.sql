CREATE TABLE accounts (
	id INT AUTO_INCREMENT,
	class TINYTEXT,
	email VARCHAR(255) UNIQUE,
	password CHAR(60), -- bcrypt

	created DATETIME DEFAULT CURRENT_TIMESTAMP,
	updated DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

	PRIMARY KEY(id)
);

CREATE TABLE professors  (
	id INT AUTO_INCREMENT,
	account_id INT,
	first_name TINYTEXT,
	last_name TINYTEXT,

	created DATETIME DEFAULT CURRENT_TIMESTAMP,
	updated DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

	PRIMARY KEY(id),
	FOREIGN KEY(account_id) REFERENCES accounts(id)
);

CREATE TABLE students (
	id INT AUTO_INCREMENT,
	account_id INT,
	university_number CHAR(9) UNIQUE, -- sha256

	created DATETIME DEFAULT CURRENT_TIMESTAMP,
	updated DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

	PRIMARY KEY(id),
	FOREIGN KEY(account_id) REFERENCES accounts(id)
);

CREATE TABLE courses (
	id INT AUTO_INCREMENT,
	name TINYTEXT,
	description TEXT,
	professor_id INT,

	created DATETIME DEFAULT CURRENT_TIMESTAMP,
	updated DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

	PRIMARY KEY(id),
	FOREIGN KEY(professor_id) REFERENCES professors(id)
);

CREATE TABLE enrollments (
	id INT AUTO_INCREMENT,
	student_id INT,
	course_id INT,
	year INT,
	semester INT,
	section VARCHAR(16),

	created DATETIME DEFAULT CURRENT_TIMESTAMP,
	updated DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

	PRIMARY KEY(id),
	FOREIGN KEY(student_id) REFERENCES students(id),
	FOREIGN KEY(course_id) REFERENCES courses(id)
);

CREATE TABLE evaluations (
	id INT AUTO_INCREMENT,
	enrollment_id INT,
	comments TEXT,
	rating INT,

	created DATETIME DEFAULT CURRENT_TIMESTAMP,
	updated DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

	PRIMARY KEY(id),
	FOREIGN KEY(enrollment_id) REFERENCES enrollments(id)
);
